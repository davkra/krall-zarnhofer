# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest coverage
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run pytest
      working-directory: ./calculator
      run: |
        python -m pytest
    - name: Run Unit tests
      working-directory: ./calculator
      run: |
        python -m unittest discover -s tests/unit
    - name: Run Integration tests
      working-directory: ./calculator
      run: |
        python -m unittest discover -s tests/integration
    - name: Run code coverage
      working-directory: ./calculator
      run: |
        coverage run -m unittest discover -s tests
        coverage report

  build:
    runs-on: ubuntu-24.04
    needs: test

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest build coverage
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Run hello world
      working-directory: ./calculator
      run: |
        python calculator.py
    - name: Package calculator
      working-directory: ./calculator
      run: |
        python -m build

  deploy:
    runs-on: ubuntu-24.04
    needs: build

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Deploy package as artifact
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: Calculator package
        path: |
          calculator/dist/*.whl
          calculator/dist/*.tar.gz
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/calculator:latest .
    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/calculator:latest
